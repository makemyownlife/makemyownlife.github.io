const n=JSON.parse('{"key":"v-7ff54708","path":"/mq/rocketmq4/03RocketMQ4_producer.html","title":"RocketMQ 生产者","lang":"zh-CN","frontmatter":{"title":"RocketMQ 生产者","category":"RocketMQ","tag":["RocketMQ","消息队列"],"head":[["meta",{"name":"keywords","content":"RocketMQ,消息队列,设计,精要,Nameserver,生产者"}],["meta",{"name":"description","content":"一本RocketMQ电子书，希望对你有帮助！"}],["meta",{"property":"og:url","content":"https://javayong.cn/mq/rocketmq4/03RocketMQ4_producer.html"}],["meta",{"property":"og:site_name","content":"勇哥Java实战"}],["meta",{"property":"og:title","content":"RocketMQ 生产者"}],["meta",{"property":"og:description","content":"这篇文章，我们从源码的角度探寻 RocketMQ Producer 的实现机制。 1 基础配置 我们先展示生产者发送消息的示例代码。 // 1. 初始化默认生产者，传递参数生产者组名 DefaultMQProducer producer = new DefaultMQProducer(PRODUCER_GROUP); // 2. 设置名字服务地址 producer.setNamesrvAddr(\\"name-server1-ip:9876;name-server2-ip:9876\\"); // 3. 启动生产者服务 producer.start(); // 4. 定义消息对象 Message msg = new Message(*TOPIC* /* Topic */, *TAG* /* Tag */, (\\"Hello RocketMQ \\" + i).getBytes(RemotingHelper.*DEFAULT_CHARSET*) /* Message body */ ); msg.setKeys(\\"\\"); // 5. 发送消息 // 示例普通消息 SendResult sendResult = producer.send(msg); // 示例异步回调 producer.send(msg, new SendCallback() { @Override public void onSuccess(SendResult sendResult) { // do something } @Override public void onException(Throwable e) { // do something } }); // 示例oneway发送 producer.sendOneway(msg);"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-17T08:13:01.000Z"}],["meta",{"property":"article:author","content":"勇哥"}],["meta",{"property":"article:tag","content":"RocketMQ"}],["meta",{"property":"article:tag","content":"消息队列"}],["meta",{"property":"article:modified_time","content":"2023-11-17T08:13:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"RocketMQ 生产者\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-17T08:13:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"勇哥\\",\\"url\\":\\"https://javayong.cn/article/\\"}]}"]],"description":"这篇文章，我们从源码的角度探寻 RocketMQ Producer 的实现机制。 1 基础配置 我们先展示生产者发送消息的示例代码。 // 1. 初始化默认生产者，传递参数生产者组名 DefaultMQProducer producer = new DefaultMQProducer(PRODUCER_GROUP); // 2. 设置名字服务地址 producer.setNamesrvAddr(\\"name-server1-ip:9876;name-server2-ip:9876\\"); // 3. 启动生产者服务 producer.start(); // 4. 定义消息对象 Message msg = new Message(*TOPIC* /* Topic */, *TAG* /* Tag */, (\\"Hello RocketMQ \\" + i).getBytes(RemotingHelper.*DEFAULT_CHARSET*) /* Message body */ ); msg.setKeys(\\"\\"); // 5. 发送消息 // 示例普通消息 SendResult sendResult = producer.send(msg); // 示例异步回调 producer.send(msg, new SendCallback() { @Override public void onSuccess(SendResult sendResult) { // do something } @Override public void onException(Throwable e) { // do something } }); // 示例oneway发送 producer.sendOneway(msg);"},"headers":[{"level":2,"title":"1 基础配置","slug":"_1-基础配置","link":"#_1-基础配置","children":[]},{"level":2,"title":"2 发送消息流程","slug":"_2-发送消息流程","link":"#_2-发送消息流程","children":[{"level":3,"title":"2.1 构造函数","slug":"_2-1-构造函数","link":"#_2-1-构造函数","children":[]},{"level":3,"title":"2.2 启动生产者","slug":"_2-2-启动生产者","link":"#_2-2-启动生产者","children":[]},{"level":3,"title":"2.3 发送消息","slug":"_2-3-发送消息","link":"#_2-3-发送消息","children":[]}]},{"level":2,"title":"3 路由机制","slug":"_3-路由机制","link":"#_3-路由机制","children":[{"level":3,"title":"3.1 默认机制","slug":"_3-1-默认机制","link":"#_3-1-默认机制","children":[]},{"level":3,"title":"3.2 延迟容错机制","slug":"_3-2-延迟容错机制","link":"#_3-2-延迟容错机制","children":[]}]},{"level":2,"title":"4 顺序消息","slug":"_4-顺序消息","link":"#_4-顺序消息","children":[{"level":3,"title":"4.1 如何保证顺序消息","slug":"_4-1-如何保证顺序消息","link":"#_4-1-如何保证顺序消息","children":[]},{"level":3,"title":"4.2. 生产者发送顺序消息","slug":"_4-2-生产者发送顺序消息","link":"#_4-2-生产者发送顺序消息","children":[]}]}],"git":{"createdTime":1700101097000,"updatedTime":1700208781000,"contributors":[{"name":"makemyownlife","email":"zhangyong7120180@163.com","commits":3}]},"readingTime":{"minutes":11.23,"words":3370},"filePathRelative":"mq/rocketmq4/03RocketMQ4_producer.md","localizedDate":"2023年11月16日","excerpt":"<p>这篇文章，我们从源码的角度探寻 RocketMQ Producer 的实现机制。</p>\\n<figure><img src=\\"https://javayong.cn/pics/rocketmq/producer.png?b-12\\" alt=\\"\\" tabindex=\\"0\\"><figcaption></figcaption></figure>\\n<h2> 1 基础配置</h2>\\n<p>我们先展示生产者发送消息的示例代码。</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token comment\\">// 1. 初始化默认生产者，传递参数生产者组名</span>\\n<span class=\\"token class-name\\">DefaultMQProducer</span> producer <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">DefaultMQProducer</span><span class=\\"token punctuation\\">(</span><span class=\\"token constant\\">PRODUCER_GROUP</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 2. 设置名字服务地址 </span>\\nproducer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setNamesrvAddr</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"name-server1-ip:9876;name-server2-ip:9876\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 3. 启动生产者服务 </span>\\nproducer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">start</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 4. 定义消息对象 </span>\\n<span class=\\"token class-name\\">Message</span> msg <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Message</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span><span class=\\"token constant\\">TOPIC</span><span class=\\"token operator\\">*</span> <span class=\\"token comment\\">/* Topic */</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token operator\\">*</span><span class=\\"token constant\\">TAG</span><span class=\\"token operator\\">*</span> <span class=\\"token comment\\">/* Tag */</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Hello RocketMQ \\"</span> <span class=\\"token operator\\">+</span> i<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getBytes</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">RemotingHelper</span><span class=\\"token punctuation\\">.</span>*<span class=\\"token constant\\">DEFAULT_CHARSET</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">/* Message body */</span>\\n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nmsg<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setKeys</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 5. 发送消息</span>\\n<span class=\\"token comment\\">// 示例普通消息</span>\\n<span class=\\"token class-name\\">SendResult</span> sendResult <span class=\\"token operator\\">=</span> producer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">send</span><span class=\\"token punctuation\\">(</span>msg<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 示例异步回调</span>\\nproducer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">send</span><span class=\\"token punctuation\\">(</span>msg<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">SendCallback</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">onSuccess</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">SendResult</span> sendResult<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// do something</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">onException</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Throwable</span> e<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// do something</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 示例oneway发送</span>\\nproducer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">sendOneway</span><span class=\\"token punctuation\\">(</span>msg<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"勇哥"},"autoDesc":true}');export{n as data};
