const e=JSON.parse('{"key":"v-619d3da2","path":"/system-design/basis/software-engineering.html","title":"软件工程简明教程","lang":"zh-CN","frontmatter":{"title":"软件工程简明教程","category":"系统设计","description":"大部分软件开发从业者，都会忽略软件开发中的一些最基础、最底层的一些概念。但是，这些软件开发的概念对于软件开发来说非常重要，就像是软件开发的基石一样。这也是我写这篇文章的原因。 何为软件工程？ 1968 年 NATO（北大西洋公约组织）提出了软件危机（Software crisis）一词。同年，为了解决软件危机问题，“软件工程”的概念诞生了。一门叫做软件工程的学科也就应运而生。 随着时间的推移，软件工程这门学科也经历了一轮又一轮的完善，其中的一些核心内容比如软件开发模型越来越丰富实用！","head":[["meta",{"property":"og:url","content":"https://javaguide.cn/system-design/basis/software-engineering.html"}],["meta",{"property":"og:site_name","content":"勇哥Java实战"}],["meta",{"property":"og:title","content":"软件工程简明教程"}],["meta",{"property":"og:description","content":"大部分软件开发从业者，都会忽略软件开发中的一些最基础、最底层的一些概念。但是，这些软件开发的概念对于软件开发来说非常重要，就像是软件开发的基石一样。这也是我写这篇文章的原因。 何为软件工程？ 1968 年 NATO（北大西洋公约组织）提出了软件危机（Software crisis）一词。同年，为了解决软件危机问题，“软件工程”的概念诞生了。一门叫做软件工程的学科也就应运而生。 随着时间的推移，软件工程这门学科也经历了一轮又一轮的完善，其中的一些核心内容比如软件开发模型越来越丰富实用！"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-29T07:18:23.000Z"}],["meta",{"property":"article:author","content":"Guide"}],["meta",{"property":"article:modified_time","content":"2023-06-29T07:18:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"软件工程简明教程\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-29T07:18:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Guide\\",\\"url\\":\\"https://javaguide.cn/article/\\"}]}"]]},"headers":[{"level":2,"title":"何为软件工程？","slug":"何为软件工程","link":"#何为软件工程","children":[]},{"level":2,"title":"软件开发过程","slug":"软件开发过程","link":"#软件开发过程","children":[]},{"level":2,"title":"软件开发模型","slug":"软件开发模型","link":"#软件开发模型","children":[]},{"level":2,"title":"软件开发的基本策略","slug":"软件开发的基本策略","link":"#软件开发的基本策略","children":[{"level":3,"title":"软件复用","slug":"软件复用","link":"#软件复用","children":[]},{"level":3,"title":"分而治之","slug":"分而治之","link":"#分而治之","children":[]},{"level":3,"title":"逐步演进","slug":"逐步演进","link":"#逐步演进","children":[]},{"level":3,"title":"优化折中","slug":"优化折中","link":"#优化折中","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1688023103000,"updatedTime":1688023103000,"contributors":[{"name":"zhangyong","email":"zhangyong7120180@163.com","commits":1}]},"readingTime":{"minutes":6.29,"words":1887},"filePathRelative":"system-design/basis/software-engineering.md","localizedDate":"2023年6月29日","excerpt":"<p>大部分软件开发从业者，都会忽略软件开发中的一些最基础、最底层的一些概念。但是，这些软件开发的概念对于软件开发来说非常重要，就像是软件开发的基石一样。这也是我写这篇文章的原因。</p>\\n<h2> 何为软件工程？</h2>\\n<p>1968 年 NATO（北大西洋公约组织）提出了<strong>软件危机</strong>（<strong>Software crisis</strong>）一词。同年，为了解决软件危机问题，“<strong>软件工程</strong>”的概念诞生了。一门叫做软件工程的学科也就应运而生。</p>\\n<p>随着时间的推移，软件工程这门学科也经历了一轮又一轮的完善，其中的一些核心内容比如软件开发模型越来越丰富实用！</p>","copyright":{"author":"Guide"},"autoDesc":true}');export{e as data};
